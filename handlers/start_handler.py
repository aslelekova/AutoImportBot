# start_handler.py
from aiogram import Router, types
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.markdown import hbold

from keyboards import marks_keyboard as KB_brand
from keyboards.marks_keyboard import brand_choose

router = Router()


@router.message(CommandStart())
async def cmd_start(message: types.Message):
    """
    Handler for the /start command.

    :param message: The message triggering the command.
    """
    await message.answer(f'‚úã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.username}!'
                         f'\n\n–Ø Telegram-–±–æ—Ç –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ—Ä–µ–π—Å–∫–∏—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, —è –ø–æ–º–æ–≥—É '
                         f'—Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É –∏ –¥—Ä—É–≥–∏–µ –¥–µ—Ç–∞–ª–∏ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –º–∞—à–∏–Ω—ã –≤ –†–§.\n\n'
                         f'üí∞ –¢–∞–∫–∂–µ —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –ø–æ—Ö–æ–∂–∏–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º –≤ –†–æ—Å—Å–∏–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.\n\nüöò '
                         f'–ö–∞–∫–∞—è –º–∞—Ä–∫–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=brand_choose())


@router.message(Command("help"))
async def handle_help(message: types.Message):
    """
    Handle the /help command to provide information about available commands and how to use the bot.

    :param message: The message object.
    :return: None
    """
    await message.answer(text="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å.\n\n"
                              "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                              "/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º\n"
                              "/restart - –≤—ã–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–Ω–æ–≤–æ\n"
                              "/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö\n\n"
                              "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –¥–ª—è —Å–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å, "
                              "–ø–∏—à–∏—Ç–µ —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º!\n\nüì≤+7 (495) 844-88-08\n‚úâÔ∏è–¢–µ–ª–µ–≥—Ä–∞–º: @PRIDECARSAUTO\nüìÅWhatsApp: "
                              "wa.me/79802120669\nüîó–°–∞–π—Ç: https://pride-cars.com/"
)


@router.message(Command("restart"))
async def restart_command(message: types.Message, state: FSMContext):
    """
    Handler for the /restart command. Clears the FSM context for the current user
    and restarts the car selection process.
    """
    await state.clear()
    await message.answer(
        f"{hbold('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã.')} –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.\n\nüöò –ö–∞–∫–∞—è –º–∞—Ä–∫–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n",
        reply_markup=KB_brand.brand_choose()
    )